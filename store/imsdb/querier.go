// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package imsdb

import (
	"context"
)

type Querier interface {
	AddEventAccess(ctx context.Context, arg AddEventAccessParams) (int64, error)
	AttachFieldReportToIncident(ctx context.Context, arg AttachFieldReportToIncidentParams) error
	AttachIncidentTypeToIncident(ctx context.Context, arg AttachIncidentTypeToIncidentParams) error
	AttachRangerHandleToIncident(ctx context.Context, arg AttachRangerHandleToIncidentParams) error
	AttachReportEntryToFieldReport(ctx context.Context, arg AttachReportEntryToFieldReportParams) error
	AttachReportEntryToIncident(ctx context.Context, arg AttachReportEntryToIncidentParams) error
	AttachedFieldReportNumbers(ctx context.Context, arg AttachedFieldReportNumbersParams) ([]int32, error)
	ClearEventAccessForExpression(ctx context.Context, arg ClearEventAccessForExpressionParams) error
	ClearEventAccessForMode(ctx context.Context, arg ClearEventAccessForModeParams) error
	ConcentricStreets(ctx context.Context, event int32) ([]ConcentricStreetsRow, error)
	CreateConcentricStreet(ctx context.Context, arg CreateConcentricStreetParams) error
	CreateEvent(ctx context.Context, name string) (int64, error)
	CreateFieldReport(ctx context.Context, arg CreateFieldReportParams) error
	CreateIncident(ctx context.Context, arg CreateIncidentParams) (int64, error)
	CreateIncidentTypeOrIgnore(ctx context.Context, arg CreateIncidentTypeOrIgnoreParams) error
	CreateReportEntry(ctx context.Context, arg CreateReportEntryParams) (int64, error)
	DetachIncidentTypeFromIncident(ctx context.Context, arg DetachIncidentTypeFromIncidentParams) error
	DetachRangerHandleFromIncident(ctx context.Context, arg DetachRangerHandleFromIncidentParams) error
	DetachedFieldReportNumbers(ctx context.Context, event int32) ([]int32, error)
	EventAccess(ctx context.Context, event int32) ([]EventAccessRow, error)
	EventAccessAll(ctx context.Context) ([]EventAccessAllRow, error)
	Events(ctx context.Context) ([]EventsRow, error)
	FieldReport(ctx context.Context, arg FieldReportParams) (FieldReportRow, error)
	FieldReport_ReportEntries(ctx context.Context, arg FieldReport_ReportEntriesParams) ([]FieldReport_ReportEntriesRow, error)
	FieldReports(ctx context.Context, event int32) ([]FieldReportsRow, error)
	FieldReports_ReportEntries(ctx context.Context, arg FieldReports_ReportEntriesParams) ([]FieldReports_ReportEntriesRow, error)
	HideShowIncidentType(ctx context.Context, arg HideShowIncidentTypeParams) error
	Incident(ctx context.Context, arg IncidentParams) (IncidentRow, error)
	IncidentTypes(ctx context.Context) ([]IncidentTypesRow, error)
	Incident_ReportEntries(ctx context.Context, arg Incident_ReportEntriesParams) ([]Incident_ReportEntriesRow, error)
	Incidents(ctx context.Context, event int32) ([]IncidentsRow, error)
	Incidents_ReportEntries(ctx context.Context, arg Incidents_ReportEntriesParams) ([]Incidents_ReportEntriesRow, error)
	MaxFieldReportNumber(ctx context.Context, event int32) (interface{}, error)
	MaxIncidentNumber(ctx context.Context, event int32) (interface{}, error)
	QueryEventID(ctx context.Context, name string) (QueryEventIDRow, error)
	SchemaVersion(ctx context.Context) (int16, error)
	SetFieldReportReportEntryStricken(ctx context.Context, arg SetFieldReportReportEntryStrickenParams) error
	SetIncidentReportEntryStricken(ctx context.Context, arg SetIncidentReportEntryStrickenParams) error
	UpdateFieldReport(ctx context.Context, arg UpdateFieldReportParams) error
	UpdateIncident(ctx context.Context, arg UpdateIncidentParams) error
}

var _ Querier = (*Queries)(nil)
