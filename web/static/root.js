// Code generated by tsgo. DO NOT EDIT.

//
// See the file COPYRIGHT for copyright information.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
"use strict";
import * as ims from "./ims.js";
//
// Initialize UI
//
initRootPage();
async function initRootPage() {
    const params = new URLSearchParams(window.location.search);
    if (params.get("logout") != null) {
        // this clears the refresh cookie
        await fetch(url_logout);
        ims.clearLocalStorage();
        window.history.replaceState(null, "", url_app);
    }
    const preferredState = ims.getIncidentsPreferredState();
    if (preferredState) {
        const stateSelect = document.getElementById("preferred_state");
        stateSelect.value = preferredState;
    }
    const result = await ims.commonPageInit();
    if (result.authInfo.authenticated) {
        document.getElementById("current-year-link")?.focus();
    }
    else {
        document.getElementById("login-button")?.focus();
    }
    window.setPreferredState = setPreferredState;
}
async function setPreferredState(el) {
    if (ims.isValidIncidentsTableState(el.value)) {
        ims.setIncidentsPreferredState(el.value);
    }
    else {
        ims.setIncidentsPreferredState(null);
    }
    ims.controlHasSuccess(el);
}
